<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
    <description>MQ</description>
    <!-- 加载mq属性配置文件 -->
    <context:property-placeholder location="classpath*:/ibmmq/mqconnect.properties" />
    <!-- mq队列连接工厂 -->
    <bean id="jmsConnectionFactory" class="com.ibm.mq.jms.MQQueueConnectionFactory">
        <property name="transportType" value="${app.mq.transportType}"/>
        <property name="queueManager" value="${queue.manager}"/>
        <property name="hostName" value="${queue.manager.host}"/>
        <property name="port" value="${app.mq.port}"/>
        <property name="channel" value="${app.mq.channel}"/>
    </bean>
    <!-- spring缓存管理mq队列连接工厂 -->
    <bean id="jmsQueueConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="jmsConnectionFactory" />
        <property name="sessionCacheSize">
            <value>5</value>
        </property>
    </bean>

    <!-- MQ sender queue setup -->
    <bean id="senderQueue" class="com.ibm.mq.jms.MQQueue">
        <property name="baseQueueManagerName" value="${queue.manager}"/>
        <property name="baseQueueName" value="${queue.name}"/>
    </bean>
    <!-- MQ receiver queue setup -->
    <bean id="receiverQueue" class="com.ibm.mq.jms.MQQueue">
        <property name="baseQueueManagerName" value="${queue.manager}"/>
        <property name="baseQueueName" value="${queue.name}"/>
    </bean>

    <!-- the JMSTemplate setup for Sender Queue-->
    <bean id="SenderJMSTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsQueueConnectionFactory"/>
        <property name="defaultDestination" ref="senderQueue"/>
        <property name="pubSubDomain" value="false"/>
    </bean>

    <!-- the JMSTemplate setup for Receiver Queue -->
    <bean id="ReceiverJMSTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsQueueConnectionFactory"/>
        <property name="defaultDestination" ref="receiverQueue"/>
        <property name="pubSubDomain" value="false"/>
    </bean>
     <!--队列发送程序-->
    <bean id="jmsSender" class="com.zlc.ibmmq.JMSSender">
        <property name="jmsTemplate" ref="SenderJMSTemplate" />
        <property name="replyTo" ref="senderQueue" />
    </bean>
    <!-- 队列接收程序 -->
    <bean id="jmsReceiver" class="com.zlc.ibmmq.JMSReceiver">
        <property name="jmsTemplate" ref="ReceiverJMSTemplate"/>
        <property name="receiveQueue" ref="receiverQueue"/>
    </bean>

    <!-- spring 监听队列，一旦队列中有消息，马上触发监听 -->
    <bean id="jmsContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsQueueConnectionFactory" />
        <property name="destination" ref="receiverQueue" />
       <!-- <property name="messageListener" ref="jmsReceiver" />-->
        <property name="concurrentConsumers" value="1" />
    </bean>

</beans>
